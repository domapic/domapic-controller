{
  "tags": [{
    "name": "user",
    "description": "Controller users"
  }],
  "components": {
    "schemas": {
      "User": {
        "description": "User data",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique id of the user",
            "type": "string"
          },
          "name": {
            "description": "Name of the user",
            "type": "string",
            "pattern": "^[a-z0-9_.-]*$"
          },
          "email": {
            "description": "Email of the user",
            "type": "string",
            "format": "email"
          },
          "role": {
            "description": "Role assigned to the user",
            "type": "string",
            "enum": ["admin", "operator", "module", "plugin", "service-registerer"]
          },
          "createdAt": {
            "description": "Creation date timestamp",
            "type": "string"
          },
          "updatedAt": {
            "description": "Last update date timestamp",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "example": {
          "_id": "1223123",
          "name": "Foo user",
          "email": "foo-email@foo-domain.com",
          "role": "admin",
          "createdAt": "2018-07-28T17:13:08.718Z",
          "updatedAt": "2018-07-28T17:13:09.730Z"
        }
      },
      "NewUser": {
        "description": "User data",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the user",
            "type": "string",
            "pattern": "^[a-z0-9_.-]*$"
          },
          "email": {
            "description": "Email of the user",
            "type": "string",
            "format": "email"
          },
          "password": {
            "description": "User password",
            "type": "string"
          },
          "role": {
            "description": "Role assigned to the user",
            "type": "string",
            "enum": ["admin", "operator", "module", "plugin", "service-registerer"]
          }
        },
        "required": ["name", "role"],
        "additionalProperties": false,
        "example": {
          "name": "foo-user",
          "email": "foo-email@foo-domain.com",
          "role": "admin",
          "password": "foopass"
        }
      },
      "Users": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      }
    },
    "responses": {
      "NewUser": {
        "description": "New user added",
        "headers": {
          "location": {
            "$ref": "#/components/headers/ContentLocation"
          }
        }
      }
    }
  },
  "paths": {
    "/users": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Service name"
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string",
              "enum": ["admin", "operator", "module", "plugin", "service-registerer"]
            },
            "description": "Service name"
          }
        ],
        "tags": ["user"],
        "summary": "Return users",
        "description": "Returns an array with all registered users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Users response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        },
        "security": [{
          "jwt": []
        }, {
          "apiKey": []
        }]
      },
      "post": {
        "tags": ["user"],
        "summary": "Add a new user",
        "description": "Register a new user",
        "operationId": "addUser",
        "requestBody": {
          "description": "Data of the user to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewUser"
          }
        },
        "security": [{
          "jwt": []
        }, {
          "apiKey": []
        }]
      }
    },
    "/users/me": {
      "get": {
        "tags": ["user"],
        "summary": "Returns logged user data",
        "description": "Returns profile information of the access token's resource owner",
        "operationId": "getUserMe",
        "responses": {
          "200": {
            "description": "user",
            "content": {
              "application/json": {
                "schema" : {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [{
          "jwt": []
        }, {
          "apiKey": []
        }]
      }
    },
    "/users/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "User id"
          }
        ],
        "tags": ["user"],
        "summary": "Returns user data",
        "description": "Returns all data about an user",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "user",
            "content": {
              "application/json": {
                "schema" : {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "security": [{
          "jwt": []
        }, {
          "apiKey": []
        }]
      }
    }
  }
}
